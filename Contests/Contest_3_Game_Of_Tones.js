/*
 ----------------------------------------------------------------------------------------------------------------
 PLEASE GIVE UP TO A MINUTE (UNLIKELY THAT LONG BUT STILL) FOR THE CODE TO RUN AND SONG TO PLAY
 I ASSURE YOU IT WILL RUN EVENTUALLY; IF WEBSITE SAYS "UNRESPONSIVE", CLICK "WAIT" OR DO NOTHING ON THAT PROMPT
 AND AFTER A WHILE IT WILL WORK, THE DIALOG BOX WILL GO AWAY BY ITSELF MOMENTARILY AFTERWARDS.
 
 IF NOT, AFTON (PURPLE GUY) IS GONNA COME FIND YOU!
 ----------------------------------------------------------------------------------------------------------------
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣶⣶⣶⣶⣶⣶⣶⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀     ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣎⠉⠉⠉⠉⠉⠉⠉⠉⠉⣱⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣻⣽⣿⣽⣟⣯⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀     ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⠀⠀⠀⠀⠀⠀  ⠀⠀⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠿⣷⣿⣻⠿⢿⣻⣿⣽⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀     ⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠚⠒⠒⠒⠒⠒⠒⠒⠒⠓⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣰⣿⣿⣿⣀⣿⣿⣿⣿⣾                   ⠀ ⣀⠀⢠⡤⢄⣸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣇⡠⢤⡄⠀⣀⣀⣀⡀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠿⠿⠿⠿⠿⠿⠿⠿⢷⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀     ⡰⠕⠀⠐⠂⠍⡆⠙⣭⣛⡀⠤⠤⠤⠤⠤⠤⠤⠄⢐⣛⣭⠋⢰⡩⠐⠂⠐⠫⢆
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⠀⠀⠀⠀⠀⠀⠀⢸⣿⣷⠀⠀⠀⠀⠀⠀⠀⠀     ⢣⢄⠀⠀⢀⢠⢛⠞⠁⠀⠉⠉⠁⠒⠒⠒⠒⠈⠉⠉⠀⠈⠳⡛⡄⡀⠀⠀⡠⡜
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢹⣀⣀⡀⣀⣀⣀⣨⣿⣿⡿⣶⣶⠀⠀⠀⠀⠀⠀     ⠈⠳⣕⠀⣰⣻⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⣝⣆⠀⣪⠞⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠉⠉⠉⠉⠉⠉⠁⢁⣿⣿⣿⣀⣀⡀⠀⠀⠀     ⠀⠀⠀⠉⢠⠇⠀⠀⠀⣀⣀⣀⠀⠀⠀⠀⠀⠀⣀⣀⣀⠀⠀⠀⠸⡄⠉⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣷⣿⣻⣿⢿⣿⠀⠀     ⠀⠀⠀⠀⢸⠀⠀⢠⡾⠿⠿⠿⣿⣄⠀⠀⣠⣿⠿⠿⠿⢷⡀⠀⠀⡇⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡏⠉⠈⠉⢹⣿⣻⣿⡇     ⠀⠀⠀⠀⢸⠀⠀⠈⢀⣶⠛⠛⢦⠙⠀⠐⠋⡶⠛⠛⣷⡀⠀⠀⠀⡇⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⣀⣸⣿⠀⠀⢸⣿⣟⣿⣽⡇     ⠀⠀⠀⠀⡸⠃⠀⠀⠸⣷⡈⡃⣸⠇⠀⠀⠸⣇⢹⠁⣾⠇⠀⠀⠘⢇⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢾⣿⡿⣿⣿⣤⣤⣼⣯⣿⣯⣿⠇      ⠀  ⢸⠁⠀⠀⠀⣩⠿⡭⠤⢶⣶⣤⣭⡿⠿⣉⣀⠀⠀⠀⠈⡆⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣄⣄⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⣯⣿⢿⣾⢿⡿⣟⣯⣷⣿⣻⡇      ⠀⠀⠘⢆⢀⡞⠁⠀⠀⠀⠙⠛⠿⠿⠛⠋⠀⠀⠀⠈⢳⡀⡰⠃⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⣀⣘⣿⣿⣿⠀⠀⠀⠀⢀⣶⣶⣾⣿⣿⣿⢿⣻⣿⢯⣿⡿⣿⣻⣽⣟⣿⡇    ⠀⠀⠀⢹ ⢾⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡗⡏⠀⡇⠀⠀⠀⠀
⢰⣶⣶⣖⣀⣰⣶⣶⣿⣿⡿⣷⣶⣶⣶⣶⣶⣾⡿⣯⣿⢷⣿⣻⡏⢹⣿⣿⡿⣽⣿⣟⣯⣿         ⠸⡄⢷⣀⠀⠀⠀⠀⠀⣠⣄⠀⠀⠀⠀⠀⢀⡾⢠⠃⡇⠀⠀⠀⠀⠀
⠸⠿⠿⣿⣿⣿⡏⠿⠿⠀⣿⣿⣷⣿⣏⣿⣹⣾⣿⣿⣹⣿⠉⠉⠁⢸⣿⣿⣿⡿⣷⣿⡿⣷        ⠀ ⢣⠈⠫⣹⡒⠚⢉⠉⢉⡉⠉⣉⠓⢒⣏⠝⠁⡞⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠉⠉⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣾⢿⣟⣷⣿⣿⠀⠀     ⠀⠀ ⠀⠀⠀⠳⡀⠈⠙⠒⠛⠤⠼⠧⠤⠛⠒⠋⠁ ⣀⠞⠁⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⠿⣯⣿⣟⣯⣷⣿⠀⠀     ⠀ ⠀⠀⠀⠀⠀⠀⠈⠓⠦⠤⣤⠤⣀⣠⣄⠤⣀⣠⠴⠚⠁⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣯⣿⣟⣿⣿⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣳⣿⣟⣿⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣻⣷⣿⣿⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣽⣷⡿⣿⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣽⣾⣿⣿⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣿⣯⣷⣿⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⣿⣿⣯⣿⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⣷⡿⣿⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠐⣿⣿⣾⣿⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⣿⣟⣷⣿⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣶⣶⣶⣶⣶⣿⣿⣻⣿⡆⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠿⠿⠻⠯⠿⠟⠾⠿⠽⠇⠀⠀

⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⠖⣚⣋⣉⡻⠶⡄⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠋⣠⠞⠁⠀⠀⠛⡆⠹⡄⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡞⠑⡶⠁⠀⠀⠀⠀⠀⢸⠀⡇⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠇⢸⠁⢠⡀⠀⠀⠀⠀⡸⢸⠁⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠚⠫⢟⣮⣧⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣘⡦⢌⣓⡤⣹⡆⠀⠀⣰⢣⠏⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⡴⠛⠛⠛⠲⣄⣸⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠞⣡⠔⠒⠒⠮⡹⠚⢯⣉⣵⠏⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⡏⠁⠀⠁⢀⡤⠚⠉⠙⡍⢧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠏⡰⠁⠀⠀⠀⠀⠈⢆⠀⢳⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⡀⠀⠀⠀⠀⣤⢀⠀⢹⠈⢧⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣟⣲⠁⠀⠀⠀⠀⢀⣀⣸⠀⡞⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢧⡔⠀⠀⢀⣽⣿⠁⠀⡇⠸⡄⠀⠀⠀⠀⠀⠀⠀⣸⣅⡇⡏⠑⠄⠀⠀⠀⠀⣸⢣⡼⠁⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣇⠀⠀⠸⡿⠛⠀⣾⣉⣶⣃⠀⠀⠀⠀⠀⠀⡿⣿⠿⣆⡼⡄⠀⠀⠀⠀⡴⠁⡸⠃⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣆⡀⠀⠀⣀⡤⠋⠀⣁⣨⣇⠤⠤⠤⠤⠤⣾⣿⣭⣀⠈⠉⠢⢄⣀⡞⠁⡴⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣯⢉⣉⣥⣔⠾⠛⠉⠁⠀⠀⠀⠀⠀⠰⣿⣟⡏⠻⣕⠢⢤⣀⣀⣠⠞⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⣠⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠋⠀⠀⠙⢶⡋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⠋⠀⠀⠀⡜⠀⠀⡴⠀⠀⠀⠰⣄⠀⠀⠀⠀⠀⠀⠀⠻⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡼⠁⠀⠀⣠⡼⣤⡤⣞⠀⠀⠀⠀⠀⠘⣆⣀⣀⡇⠀⣸⠀⠀⠙⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⠃⠀⢰⣞⡕⠉⠁⠈⠙⢷⡤⠃⠐⢤⣠⠾⠓⠒⠫⣝⢅⠀⡀⠀⢿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠏⠀⠀⢸⡜⢀⡴⠚⠉⠒⢜⣆⡀⠀⢠⢇⡠⠤⠤⣀⠈⢟⡏⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⢀⡈⠉⢿⣃⣜⠰⣶⣰⠀⡸⠯⠕⠒⠿⡏⠀⡄⠠⠈⣆⢸⡏⠁⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠋⠀⠀⠉⠻⣺⣄⣈⡠⠞⠃⢀⣀⠀⠀⠙⢦⡙⠞⠀⣾⣿⠁⠀⢰⢀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⡄⠀⠀⢠⠆⠀⣡⠂⣀⠴⠊⠁⠀⠉⠙⢲⠠⣍⠑⠚⠊⠉⠉⠀⡏⣼⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢷⡄⢀⠇⠀⡞⠁⠀⣹⠂⠀⠀⠀⠀⢀⡞⠀⠈⢳⠀⠀⠀⠀⢰⡿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢻⡿⢤⢻⠁⠀⡀⡝⠋⠉⠉⠓⠢⡎⠀⢀⠀⠀⠇⠀⠀⢀⣼⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣷⡈⣞⠲⠼⢻⣀⣀⠀⠀⢀⡼⠁⠀⣼⣆⠀⠐⢠⡶⣯⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡟⢌⠪⣝⡒⠼⣀⣉⣹⡳⠿⠒⢓⡖⠉⣓⡶⣗⣟⣷⡟⢀⡤⠤⢤⣤⣤⣄⣀⣀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢳⣈⠉⠷⢬⣵⡞⠛⠒⡟⠛⠛⣯⠟⠛⣷⣯⢠⠿⢷⡿⠋⠀⠀⠀⠈⠛⣶⣤⡈⡹⢦⡄⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢀⣤⡶⠒⠛⠛⠒⢾⡿⠦⣀⠀⠀⠹⠤⣨⠧⠒⠟⢧⣀⠞⠁⠘⠃⣠⢿⡁⠀⠀⠀⠀⠀⠀⠈⢳⡈⠳⡄⠙⣆⠀⠀
⠀⠀⠀⠀⣀⣠⣴⡏⠀⢷⡄⠀⠀⠀⠀⣿⠦⠈⠓⡤⢄⣀⣄⣀⣀⣀⣀⣀⣠⠤⠴⡞⠓⠚⣇⠀⠀⠀⠀⠀⠀⠀⠀⢧⠀⠘⡄⢸⡄⠀
⠀⢀⡴⢛⡽⠚⡿⢷⣀⡼⠃⢠⡦⠀⠀⡿⠒⠁⠸⣅⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣇⠀⠀⠘⣆⠀⠀⠀⠀⠀⠀⠀⢸⠀⢠⠇⢰⠷⡀
⠀⡾⢡⡏⠀⣠⣷⡀⡞⠀⠀⢯⠉⢦⣴⠁⠀⠀⠀⡞⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡆⠀⠀⠈⠳⣄⡀⠀⠀⠀⢠⠏⣠⠾⢚⡟⠀⢧
⢸⠁⡏⡇⠀⢧⣈⢻⣇⠀⠀⠀⢷⡽⠁⠀⠀⠀⣠⢧⠀⠀⠀⠀⠀⣀⠀⠀⠀⠀⠀⠸⡅⠀⠀⠀⣠⣼⠛⠒⠶⣾⠛⠚⣡⡴⠋⠀⠀⢸
⡾⠀⠣⠽⡦⠒⠁⠀⢈⡷⠦⢤⡞⠀⠀⠀⣀⠔⠁⣸⠀⠀⠀⣠⢴⡏⠳⢄⡀⠀⣀⣠⠗⠀⠠⣶⣾⠍⢠⠒⡆⢹⠎⠉⠁⠀⠀⡇⠀⢸
⢷⠀⠀⠀⠘⠦⠟⠉⠉⠀⠀⡼⠀⠀⠀⠈⠁⠀⠀⠘⠉⠉⠉⠁⠀⠀⠀⠀⠹⢏⠀⠀⠐⠁⠀⠁⠺⠶⢋⣀⠓⠻⡄⠀⠀⠀⠈⠀⠀⡎
⠘⠆⠀⠀⠀⠀⠀⠀⠀⠀⣸⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⠂⠀⠀⠀⠀⠀⠀⠀⠈⠉⠀⠀⢳⡀⠀⠀⠀⢀⠼⠀
 ----------------------------------------------------------------------------------------------------------------
 Song Name: 240 Bits Per Mile (by Leon Riskin)
 [https://freddy-fazbears-pizzeria-simulator.fandom.com/wiki/240_Bits_Per_Mile]
 
 Description: The song that plays in the Midnight Motorist arcade game in 
 Freddy Fazbear's Pizzeria Simulator, but not the official 8-bit version; I prefer 
 the psuedo-8-bit piano version: https://musescore.com/user/57257007/scores/27134803
 
 Remark: Chosen out of all other potential songs because it is esoteric, and also
 this song (and others) got me through that horrible weekend when I had to rush
 MA1522 Homework 1 and CS1231S Assignment 1 submissions
 
 Disclaimer: The ASCII artworks are not done by me, I got them from the web; 
 Also, one of the bars of the song, the 23rd one, may sound weird/glitchy/fuzzy,
 this is intended by the composer :) Please don't penalise for it O_O
 ---------------------------------------------------------------------------------------------------------------- 
 */
function later_that_night() {
    
    function flatten(listOfLists) {
        if (is_null(listOfLists)) {
            return null;
        } else {
            const firstList = head(listOfLists);
            const restLists = tail(listOfLists);
        
            function append(xs, ys) {
                if (is_null(xs)) {
                    return ys;
                } else {
                    return pair(head(xs), append(tail(xs), ys));
                }
         }
        
            return append(firstList, flatten(restLists));
        }
    }
    
    const p = (x, y) => pair(x, y);

    function chords() {
        
        function bit_piano(note, duration) {
            return stacking_adsr(square_sound, midi_note_to_frequency(note), duration, list(adsr(0, 0.2, 0.7, 0.3)));
        }
        
        // A B E are flats
        // bar: 2   1: 0.5   and: 0.25   e: 0.125   bruh: 0.0625    metronome: 120 BPM
        const one = list(p("Eb4",1),p("G3",1),p("C4",1),p("G3",1),p("Eb4",1),p("G3",1),p("C4",1),p("G3",1),p("Eb4",1),p("G3",1),p("C4",1),p("G3",1),p("Eb4",1),p("G3",1),p("C4",1),p("G3",1));
        const two = list(p("Eb4",1),p("Ab3",1),p("C4",1),p("Ab3",1),p("Eb4",1),p("Ab3",1),p("C4",1),p("Ab3",1),p("Eb4",1),p("Ab3",1),p("C4",1),p("Ab3",1),p("Eb4",1),p("Ab3",1),p("C4",1),p("Ab3",1));
        const three = list(p("Eb4",1),p("F3",1),p("C4",1),p("F3",1),p("Eb4",1),p("F3",1),p("C4",1),p("F3",1),p("Eb4",1),p("F3",1),p("C4",1),p("F3",1),p("Eb4",1),p("F3",1),p("C4",1),p("F3",1));
        const four = list(p("Eb4",1),p("Ab3",1),p("C4",1),p("Ab3",1),p("Eb4",1),p("Ab3",1),p("C4",1),p("Ab3",1),p("F4",1),p("Bb3",1),p("D3",1),p("Bb3",1),p("F4",1),p("Bb3",1),p("D3",1),p("Bb3",1));
        const five = list(p("G4",1),p("C4",1),p("Eb4",1),p("C4",1),p("G4",1),p("C4",1),p("Eb4",1),p("C4",1),p("G4",1),p("C4",1),p("Eb4",1),p("C4",1),p("G4",1),p("C4",1),p("Eb4",1),p("C4",1));
        const six = list(p("Ab4",1),p("C4",1),p("Eb4",1),p("C4",1),p("Ab4",1),p("C4",1),p("Eb4",1),p("C4",1),p("Ab4",1),p("C4",1),p("Eb4",1),p("C4",1),p("Ab4",1),p("C4",1),p("Eb4",1),p("C4",1));
        const seven = list(p("G4",1),p("Bb3",1),p("Eb4",1),p("Bb3",1),p("G4",1),p("Bb3",1),p("Eb4",1),p("Bb3",1),p("G4",1),p("Bb3",1),p("Eb4",1),p("Bb3",1),p("G4",1),p("Bb3",1),p("Eb4",1),p("Bb3",1));
        const eight = list(p("G4",1),p("B3",1),p("D4",1),p("Bb3",1),p("G4",1),p("Bb3",1),p("D4",1),p("Bb3",1),p("G4",1),p("Bb3",1),p("D4",1),p("Bb3",1),p("G4",1),p("Bb3",1),p("D4",1),p("Bb3",1));
        const nine = list(p("C5",1),p("G4",1),p("C5",1),p("G4",1),p("D5",1),p("G4",1),p("Eb5",1),p("G4",1),p("C5",1),p("G4",1),p("C5",1),p("G4",1),p("D5",1),p("G4",1),p("Eb5",1),p("G4",1));
        const ten = list(p("C5",1),p("Ab4",1),p("C5",1),p("Ab4",1),p("D5",1),p("Ab4",1),p("Eb5",1),p("Ab4",1),p("C5",1),p("Ab4",1),p("C5",1),p("Ab4",1),p("D5",1),p("Ab4",1),p("Eb5",1),p("Ab4",1));
        const eleven = list(p("C5",1),p("A4",1),p("C5",1),p("Ab4",1),p("D5",1),p("Ab4",1),p("Eb5",1),p("Ab4",1),p("C5",1),p("Ab4",1),p("C5",1),p("Ab4",1),p("D5",1),p("Ab4",1),p("Eb5",1),p("Ab4",1));
        const twelve = list(p("C5",1),p("Ab4",1),p("C5",1),p("Ab4",1),p("D5",1),p("Ab4",1),p("Eb5",1),p("Ab4",1),p("D5",1),p("Bb4",1),p("D5",1),p("Bb4",1),p("Eb5",1),p("Bb4",1),p("F5",1),p("Bb4",1));
        const thirteen = list(p("C5",1),p(0,1),p("C6",2),p("Bb5",1),p(0,1),p("G5",1),p(0,1),p("F5",2),p("Eb5",1),p(0,1),p("D5",1),p("Eb5",1),p(0,1),p("D5",3));
        const fourteen = list(p("C5",1),p(0,1),p("D5",1),p(0,1),p("Eb5",1),p("Ab5",2),p(0,1),p("C5",1),p(0,1),p("D5",1),p(0,1),p("Eb5",1),p(0,1));
        const fifteen = list(p("G5",2),p("Bb4",1),p(0,1),p("Eb5",1),p(0,1),p("G5",1),p(0,1),p("Ab5",2),p("G5",1),p("F5",1),p(0,1),p("Eb5",1),p(0,1),p("D5",2));
        const sixteen = list(p(0,1),p("G4",2),p("Bb4",1),p(0,1),p("D5",2),p("G5",2),p("F5",2),p("Eb5",1),p(0,1),p("D5",1),p(0,1));
        const seventeen = list(p("C5",1),p(0,1),p("C5",1),p(0,1),p("D5",1),p("Eb5",1),p(0,1),p("C5",1),p(0,1),p("C5",1),p(0,1),p("C5",1),p("D5",1),p(0,1),p("Eb5",1),p(0,1));
        const eighteen = list(p("C5",1),p(0,1),p("C5",1),p(0,1),p("D5",1),p("Eb5",1),p(0,1),p("C5",1),p(0,1),p("C5",1),p(0,1),p("C5",1),p("Eb5",1),p(0,1),p("D5",1),p(0,1));
        const nineteen = list(p("C5",1),p(0,1),p("C5",1),p(0,1),p("D5",1),p("Eb5",1),p(0,1),p("C5",1),p(0,1),p("C5",1),p(0,1),p("C5",1),p("D5",1),p(0,1),p("Eb5",1),p(0,1));
        const twenty = list(p("G5",2),p("Bb4",1),p(0,1),p("Eb5",1),p("G5",1),p(0,1),p("Ab5",2),p("G5",2),p("F5",1),p(0,1),p("Eb5",1),p(0,2));
        const twentyone = list(p("Ab5",2),p("C5",1),p(0,1),p("Ab5",1),p(0,1),p("C5",1),p(0,1),p("Bb5",1),p(0,1),p("Ab5",1),p("G5",1),p(0,1),p("F5",1),p(0,1),p("Ab5",3));
        const twentytwo = list(p("C5",1),p(0,1),p("Ab5",1),p(0,1),p("C5",1),p(0,1),p("Bb5",1),p(0,1),p("Ab5",1),p("G5",1),p(0,1),p("F5",1),p(0,2));
        const twentythree = list(p("A5",(2/3)),p("D5",(2/3)),p("A4",(2/3)),p("Ab5",(2/3)),p("D5",(2/3)),p("Ab4",(2/3)),p("Bb5",(2/3)),
                                 p("D5",(2/3)),p("Ab4",(2/3)),p("C6",(2/3)),p("D5",(2/3)),p("Ab4",(2/3)),p("Bb5",(2/3)),p("D5",(2/3)),
                                 p("Ab4",(2/3)),p("Ab5",(2/3)),p("D5",(2/3)),p("Ab4",(2/3)),p("G5",(2/3)),p("D5",(2/3)),p("Ab4",(2/3)),
                                 p("F#5",(2/3)),p("D5",(2/3)),p("Ab4",(2/3)));
        const twentyfour = list(p("G5",(2/3)),p("D5",(2/3)),p("B4",(2/3)),p("G4",(2/3)),p("D4",(2/3)),p("G4",(2/3)),p("Bb4",(2/3)),
                                p("D5",(2/3)),p("G5",(2/3)),p("B5",(2/3)),p("G5",(2/3)),p("D5",(2/3)),p("D5",(2/3)),p("G4",(2/3)),
                                p("D4",(2/3)),p("G4",(2/3)),p("Bb4",(2/3)),p("D5",(2/3)),p("G5",(2/3)),p("Bb5",(2/3)),p("G5",(2/3)),
                                p("D5",(2/3)),p("Bb4",(2/3)),p("D5",(2/3)));
        const twentyfive = list(p("Eb5",1),p(0,1),p("C5",1),p(0,1),p("Eb5",1),p(0,1),p("C5",1),p(0,1),p("Eb5",1),p(0,1),p("C5",1),p("Eb5",1),p(0,1),p("F5",1),p(0,1),p("Eb5",1));
        const twentysix = list(p(0,1),p("Eb5",1),p("C5",1),p(0,1),p("Eb5",1),p(0,1),p("C5",1),p(0,1),p("Eb5",1),p(0,1),p("C5",1),p("Eb5",1),p(0,1),p("F5",1),p(0,1),p("Eb5",1));
        const twentyseven = list(p(0,1),p("Eb5",1),p("C5",1),p(0,1),p("Eb5",1),p(0,1),p("C5",1),p(0,1),p("Eb5",1),p(0,1),p("C5",1),p("Eb5",1),p(0,1),p("F5",1),p(0,1),p("Eb5",1));
        const twentyeight = list(p(0,1),p("Eb5",1),p("C5",1),p(0,1),p("Eb5",1),p(0,1),p("C5",1),p("Eb5",1),p(0,1),p("C5",1),p("Eb5",1),p("F5",1),p("Gb5",1),p("F5",1),p("Eb5",1),p("F5",1));
        const twentynine = list(p("C5",1),p(0,1),p("C5",1),p(0,1),p("D5",1),p("Eb5",1),p(0,1),p("G5",1),p(0,1),p("C5",1),p(0,1),p("C5",1),p("D5",1),p(0,1),p("Eb5",1),p(0,1));
        const thirty = list(p("Ab5",1),p(0,1),p("C5",1),p(0,1),p("D5",1),p("Eb5",1),p(0,1),p("Ab5",1),p(0,1),p("C5",1),p(0,1),p("C5",1),p("D5",1),p(0,1),p("Eb5",1),p(0,1));
        const thirtyone = list(p("A5",1),p(0,1),p("C5",1),p(0,1),p("D5",1),p("Eb5",1),p(0,1),p("Ab5",1),p(0,1),p("C5",1),p(0,1),p("C5",1),p("D5",1),p(0,1),p("Eb5",1),p(0,1));
        const thirtytwo = list(p("Ab5",1),p(0,1),p("Eb5",1),p(0,1),p("C5",1),p("Ab5",1),p(0,1),p("G5",1),p(0,1),p("F5",1),p(0,1),p("F5",1),p("Eb5",1),p(0,1),p("D5",1),p(0,1));
        const thirtythree = list(p(0,0.5),p("D4",0.5),p("Eb4",0.5),p("G4",0.5),p("C5",0.5),p("D5",0.5),p("Eb5",0.5),p("D5",0.5), p("C5",0.5),p("G4",0.5),p("Eb4",0.5),p("D4",0.5),p("Eb4",0.5),p("G4",0.5),p("C5",0.5),p("Eb5",0.5),
                                 p("G5",0.5),p("F5",0.5),p("Eb5",0.5),p("D5",0.5),p("C5",0.5),p("D5",0.5),p("Eb5",0.5),p("C5",0.5), p("G5",0.5),p("Eb5",0.5),p("C5",0.5),p("G4",0.5),p("Eb4",0.5),p("C4",0.5),p("C4",0.5),p(0,0.5));
        const thirtyfour = list(p("Ab5",(2/3)),p("Eb5",(2/3)),p("C5",(2/3)),p("Ab5",(2/3)),p("Eb5",(2/3)),p("C5",(2/3)),p("Ab5",(2/3)),p("Eb5",(2/3)),p("C5",(2/3)),
                                p("Bb5",(2/3)),p("Eb5",(2/3)),p("C5",(2/3)),p("G5",(2/3)),p("D5",(2/3)),p("B4",(2/3)), p("F5",(2/3)),p("D5",(2/3)),p("Bb4",(2/3)),
                                p("Eb5",(2/3)),p("D5",(2/3)),p("Bb4",(2/3)), p("C5",(2/3)),p("Bb4",(2/3)),p("G4",(2/3)));
        const thirtyfive = list(p("C6",(2/3)),p("G5",(2/3)),p("Eb5",(2/3)),p("G5",(2/3)),p("Eb5",(2/3)),p("C5",(2/3)),p("Eb5",(2/3)),p("C5",(2/3)),p("G4",(2/3)),
                                p("C5",(2/3)),p("G4",(2/3)),p("Eb4",(2/3)),p("G4",(2/3)),p("Eb4",(2/3)),p("C4",(2/3)),p("C5",(2/3)),p("Eb5",(2/3)),p("G5",(2/3)),
                                p("C6",(2/3)),p("Eb6",(2/3)),p("G6",(2/3)),p("Eb6",(2/3)),p("C6",(2/3)),p("Eb6",(2/3)));
        const thirtysix = list(p("G5",1),p("G5",1),p("F5",1),p(0,1),p("Eb5",1),p("F5",1),p(0,1),p("Eb5",3),p("D5",1),p("D5",1),p("C5",1),p("C5",1),p("B4",1),p("Bb4",1));
        const thirtyseven = list(p("C5",2),p("G5",1),p("G5",1),p("F5",1),p("F5",1),p("Eb5",1),p("C5",1),p(0,1),p("C5",1),p("G5",1),p("G5",1),p("F5",1),p("F5",1),p("Eb5",1),p("Eb5",1));
        const thirtyeight = list(p("C5",1),p(0,1),p("G5",1),p(0,1),p("F5",1),p("F5",1),p("Eb5",1),p("C5",1),p(0,1),p("C5",1),p("G5",1),p("G5",1),p("F5",1),p("F5",1),p("Eb5",1),p("Eb5",1));
        const thirtynine = list(p("C5",2),p("G5",1),p(0,1),p("F5",1),p("F5",1),p("Eb5",1),p("C5",1),p(0,1),p("C5",1),p("G5",1),p("G5",1),p("F5",1),p("F5",1),p("Eb5",1),p("Eb5",1));
        const forty = list(p("C5",1),p(0,1),p("G5",1),p(0,1),p("F5",1),p("Eb5",1),p(0,1),p("C5",5),p("C#5",4));
        
        const midi_pairs = flatten(list(one,two,three,four,five,six,seven,eight,nine,ten,eleven,twelve,thirteen,fourteen,fifteen,sixteen,seventeen,eighteen,
                                        nineteen,twenty,twentyone,twentytwo,twentythree,twentyfour,twentyfive,twentysix,twentyseven,twentyeight,twentynine,
                                        thirty,thirtyone,thirtytwo,thirtythree,thirtyfour,thirtyfive,thirtysix,thirtyseven,thirtyeight,thirtynine,forty));
        const helper = p => {
            if (stringify(head(p)) === "0") {
                const multiplier = tail(p);
                return silence_sound(multiplier * 0.125);
            } else {
                const letter = head(p);
                const note = letter_name_to_midi_note(letter);
                const multiplier = tail(p);
                return bit_piano(note, multiplier * 0.125);
            }
        };
        const chords = map(helper, midi_pairs);
        
        return consecutively(chords);
    }
    
    function bass() {
        
        function bass_instrument(note, duration) {
            return stacking_adsr(square_sound, midi_note_to_frequency(note), duration, list(adsr(0, 0.5, 0.75, 1.2)));
        }
        
        // A B E are flats
        const one = list(p("C1", 0.5), p("C1", 0.5), p("C1", 0.375), p("C1", 0.25), p("C1", 0.375));
        const two = list(p("Ab1", 0.5), p("Ab1", 0.5), p("Ab1", 0.375), p("Ab1", 0.125 + 0.5));
        const three = list(p("F1", 0.5), p("F1", 0.5), p("F1", 0.375), p("F1", 0.25), p("F1", 0.375));
        const four = list(p("Ab1", 0.5), p("Ab1", 0.375), p("Ab1", 0.125 + 0.5), p("Ab1", 0.5));
        const five = list(p("C1", 0.5), p("C1", 0.5), p("C1", 0.375), p("C1", 0.25), p("C1", 0.375));
        const six = list(p("Ab1", 0.5), p("Ab1", 0.5), p("Ab1", 0.375), p("Ab1", 0.125 + 0.5));
        const seven = list(p("Eb1", 0.5), p("Eb1", 0.5), p("Eb1", 0.375), p("Eb1", 0.25), p("Eb1", 0.375));
        const eight = list(p("G1", 0.5), p("G1", 0.375), p("G1", 0.125 + 0.5), p("G1", 0.5));
        const nine = list(p("C1", 0.5), p("C1", 0.5), p("C1", 0.375), p("C1", 0.25), p("C1", 0.375));
        const ten = list(p("Ab1", 0.5), p("Ab1", 0.5), p("Ab1", 0.375), p("Ab1", 0.125 + 0.5));
        const eleven = list(p("F1", 0.5), p("F1", 0.5), p("F1", 0.375), p("F1", 0.25), p("F1", 0.375));
        const twelve = list(p("Ab1", 0.5), p("Ab1", 0.375), p("Ab1", 0.125 + 0.5), p("Ab1", 0.5));
        const thirteen = list(p("C1", 0.5), p("C1", 0.5), p("C1", 0.375), p("C1", 0.25), p("C1", 0.375));
        const fourteen = list(p("Ab1", 0.5), p("Ab1", 0.5), p("Ab1", 0.375), p("Ab1", 0.125 + 0.5));
        const fifteen = list(p("Eb1", 0.5), p("Eb1", 0.5), p("Eb1", 0.375), p("Eb1", 0.25), p("Eb1", 0.375));
        const sixteen = list(p("G1", 0.5), p("G1", 0.375), p("G1", 0.125 + 0.5), p("G1", 0.5));
        const seventeen = list(p("Ab1", 0.5), p("Ab1", 0.5), p("Ab1", 0.375), p("Ab1", 0.25), p("Ab1", 0.375));
        const eighteen = list(p("Ab1", 0.5), p("Ab1", 0.5), p("Ab1", 0.375), p("Ab1", 0.125 + 0.5));
        const nineteen = list(p("G1", 0.5), p("G1", 0.5), p("G1", 0.375), p("G1", 0.25), p("G1", 0.375));
        const twenty = list(p("Eb2", 0.5), p("Eb2", 0.375), p("Eb2", 0.125 + 0.5), p("G1", 0.5));
        const twentyone = list(p("Ab1", 0.5), p("Ab1", 0.5), p("Ab1", 0.375), p("Ab1", 0.25), p("Ab1", 0.375));
        const twentytwo = list(p("F1", 0.5), p("F1", 0.5), p("F1", 0.375), p("F1", 0.125 + 0.5));
        const twentythree = list(p("F#1", 0.5), p("F1", 0.5), p("F1", 0.375), p("F1", 0.25), p("F1", 0.375));
        const twentyfour = list(p("G1", 0.5),p("G1", 0.375),p("G1", 0.125 + 0.5), p("G1", 0.5));
        const twentyfive = list(p("C1", 0.5), p("C1", 0.5), p("C1", 0.375), p("C1", 0.25), p("C1", 0.375));
        const twentysix = list(p("Ab1", 0.5), p("Ab1", 0.5), p("Ab1", 0.375), p("Ab1", 0.125 + 0.5));
        const twentyseven = list(p("F1", 0.5), p("F1", 0.5), p("F1", 0.375), p("F1", 0.25), p("F1", 0.375));
        const twentyeight = list(p("Ab1", 0.5), p("Ab1", 0.375), p("Ab1", 1.125));
        const twentynine = list(p("C1", 0.5), p("C1", 0.5), p("C1", 0.375), p("C1", 0.25), p("C1", 0.375));
        const thirty = list(p("Ab1", 0.5), p("Ab1", 0.5), p("Ab1", 0.375), p("Ab1", 0.125 + 0.5));
        const thirtyone = list(p("F1", 0.5), p("F1", 0.5), p("F1", 0.375), p("F1", 0.25), p("F1", 0.375));
        const thirtytwo = list(p("Ab1", 0.5), p("Ab1", 0.375), p("Ab1", 0.125 + 0.5), p("Ab1", 0.5));
        const thirtythree = list(p("C1", 0.5), p("C1", 0.5), p("C1", 0.375), p("C1", 0.25), p("C1", 0.375));
        const thirtyfour = list(p("Ab1", 0.5), p("Ab1", 0.5), p("Ab1", 0.375), p("Ab1", 0.125 + 0.5));
        const thirtyfive = list(p("C1", 0.5), p("C1", 0.5), p("C1", 0.375), p("C1", 0.25), p("C1", 0.375));
        const thirtysix = list(p("Ab1", 0.5), p("Ab1", 0.375), p("Ab1", 0.25), p("C1", 0.375), p("C1", 0.5));
        const thirtyseven = list(p("C1", 0.5), p("C1", 0.5), p("C1", 0.375), p("C1", 0.25), p("C1", 0.375));
        const thirtyeight = list(p("Ab1", 0.5), p("Ab1", 0.5), p("Ab1", 0.375), p("Ab1", 0.125 + 0.5));
        const thirtynine = list(p("C1", 0.5), p("C1", 0.5), p("C1", 0.375), p("C1", 0.25), p("C1", 0.375));
        const forty = list(p("Ab1", 0.5), p("Ab1", 0.375), p("Ab1", 0.25), p("C1", 0.375), p("C1", 0.5));
        
        const midi_pairs = flatten(list(one,two,three,four,five,six,seven,eight,nine,ten,eleven,twelve,thirteen,fourteen,fifteen,sixteen,seventeen,eighteen,
                                        nineteen,twenty,twentyone,twentytwo,twentythree,twentyfour,twentyfive,twentysix,twentyseven,twentyeight,twentynine,
                                        thirty,thirtyone,thirtytwo,thirtythree,thirtyfour,thirtyfive,thirtysix,thirtyseven,thirtyeight,thirtynine,forty));
        const midi_notes = map(x => pair(letter_name_to_midi_note(head(x)), tail(x)), midi_pairs);
        const bass = k => bass_instrument(head(k), tail(k));
        const basses = map(bass, midi_notes);
        
        
        return consecutively(basses);
    }
    
    function lead() {
        
        function lead_piano(note, duration) {
            return stacking_adsr(square_sound, midi_note_to_frequency(note), duration, list(adsr(0, 0.3, 0.5, 0.6)));
        }
        
        // A B E are flats
        const all = silence_sound(16);
        const nine = list("Eb4", "G3", "C4", "G3", "Eb4", "G3", "C4", "G3", "Eb4", "G3", "C4", "G3", "Eb4", "G3", "C4", "G3");
        const ten = list("Eb4", "Ab3", "C4", "Ab3", "Eb4", "Ab3", "C4", "Ab3", "Eb4", "Ab3", "C4", "Ab3", "Eb4", "Ab3", "C4", "Ab3");
        const eleven = list("G4", "Ab3", "Eb4", "Ab3", "G4", "Ab3", "Eb4", "Ab3", "G4", "Ab3", "Eb4", "Ab3", "G4", "Ab3", "Eb4", "Ab3");
        const twelve = list("G4", "C4", "Eb4", "C4", "G4", "C4", "Eb4", "C4", "Ab4", "D4", "F4", "D4", "Ab4", "D4", "F4", "D4");
        const thirteen = list("Bb4", "Eb4", "G4", "Eb4", "Bb4", "Eb4", "G4", "Eb4", "Bb4", "Eb4", "G4", "Eb4", "Bb4", "Eb4", "G4", "Eb4");
        const fourteen = list("C5", "Eb4", "G4", "Eb4", "C5", "Eb4", "G4", "Eb4", "C5", "Eb4", "G4", "Eb4", "C5", "Eb4", "G4", "Eb4");
        const fifteen = list("G4", "Bb3", "Eb4", "Bb3","G4", "Bb3", "Eb4", "Bb3","G4", "Bb3", "Eb4", "Bb3","G4", "Bb3", "Eb4", "Bb3");
        const sixteen = list("G4", "B3", "D4", "Bb3","G4", "Bb3", "D4", "Bb3","G4", "Bb3", "D4", "Bb3","G4", "Bb3", "D4", "Bb3");
        const seventeen = list("Ab4", "C4", "Eb4", "C4", "Ab4", "C4", "Eb4", "C4", "Ab4", "C4", "Eb4", "C4", "Ab4", "C4", "Eb4", "C4");
        const eighteen = list("Ab4", "C4", "F4", "C4", "Ab4", "C4", "F4", "C4", "Ab4", "C4", "F4", "C4", "Ab4", "C4", "F4", "C4");
        const nineteen = list("G4", "C4", "Eb4", "C4", "G4", "C4", "Eb4", "C4", "G4", "C4", "Eb4", "C4", "G4", "C4", "Eb4", "C4");
        const twenty = list("G4", "Bb3", "Eb4", "Bb3", "G4", "Bb3", "Eb4", "Bb3", "G4", "Bb3", "Eb4", "Bb3", "G4", "Bb3", "Eb4", "Bb3");
        const twentyone = list("Ab4", "C4", "Eb4", "C4", "Ab4", "C4", "Eb4", "C4", "Ab4", "C4", "Eb4", "C4", "Ab4", "C4", "Eb4", "C4");
        const twentytwo = list("Ab4", "C4", "F4", "C4", "Ab4", "C4", "F4", "C4", "Ab4", "C4", "F4", "C4", "Ab4", "C4", "F4", "C4");
        const twentythree = list("A4", "D4", "F#4", "D4", "Ab4", "D4", "F4", "D4", "Ab4", "D4", "F4", "D4", "Ab4", "D4", "F4", "D4");
        const twentyfour = list("B4", "D4", "G4", "D4", "Bb4", "D4", "G4", "D4", "Bb4", "D4", "G4", "D4", "Bb4", "D4", "G4", "D4");
        const twentyfive = list("Eb4", "G3", "C4", "G3", "Eb4", "G3", "C4", "G3", "Eb4", "G3", "C4", "G3", "Eb4", "G3", "C4", "G3");
        const twentysix = list("Eb4", "Ab3", "C4", "Ab3", "Eb4", "Ab3", "C4", "Ab3", "Eb4", "Ab3", "C4", "Ab3", "Eb4", "Ab3", "C4", "Ab3");
        const twentyseven = list("Eb4", "F3", "C4", "F3", "Eb4", "F3", "C4", "F3", "Eb4", "F3", "C4", "F3", "Eb4", "F3", "C4", "F3");
        const twentyeight = list("Eb4", "A3", "C4", "Ab3", "Eb4", "Ab3", "C4", "Ab3", "F4", "Bb3", "D4", "Bb3", "F4", "Bb3", "D4", "Bb3");
        const twentynine = list("Eb4", "G3", "C4", "G3", "Eb4", "G3", "C4", "G3", "Eb4", "G3", "C4", "G3", "Eb4", "G3", "C4", "G3");
        const thirty = list("Eb4", "Ab3", "C4", "Ab3", "Eb4", "Ab3", "C4", "Ab3", "Eb4", "Ab3", "C4", "Ab3", "Eb4", "Ab3", "C4", "Ab3");
        const thirtyone = list("Eb4", "F3", "C4", "F3", "Eb4", "F3", "C4", "F3", "Eb4", "F3", "C4", "F3", "Eb4", "F3", "C4", "F3");
        const thirtytwo = list("Eb4", "A3", "C4", "Ab3", "Eb4", "Ab3", "C4", "Ab3", "F4", "Bb3", "D4", "Bb3", "F4", "Bb3", "D4", "Bb3");
        const thirtythree = list("G4", "C4", "Eb4", "C4", "G4", "C4", "Eb4", "C4", "G4", "C4", "Eb4", "C4", "G4", "C4", "Eb4", "C4");
        const thirtyfour = list("G4", "Ab3", "Eb4", "Ab3", "G4", "Ab3", "Eb4", "Ab3", "G4", "G3", "D4", "G3", "G4", "G3", "D4", "G3");
        const thirtyfive = list("G4", "C4", "Eb4", "C4", "G4", "C4", "Eb4", "C4", "G4", "C4", "Eb4", "C4", "G4", "C4", "Eb4", "C4");
        const thirtysix = list("Ab4", "Ab3", "Eb4", "Ab3", "Ab4", "Ab3", "Eb4", "Ab3", "G4", "G3", "D4", "G3", "G4", "G3", "D4", "G3");
        const thirtyseven = list("G4", "C4", "Eb4", "C4", "G4", "C4", "Eb4", "C4", "G4", "C4", "Eb4", "C4", "G4", "C4", "Eb4", "C4");
        const thirtyeight = list("G4", "Ab3", "Eb4", "Ab3", "G4", "Ab3", "Eb4", "Ab3", "G4", "G3", "D4", "G3", "G4", "G3", "D4", "G3");
        const thirtynine = list("G4", "C4", "Eb4", "C4", "G4", "C4", "Eb4", "C4", "G4", "C4", "Eb4", "C4", "G4", "C4", "Eb4", "C4");
        const forty = list("Ab4", "Ab3", "Eb4", "Ab3", "Ab4", "Ab3", "Eb4", "Ab3", "G4", "G3", "D4", "G3", "G4", "G3", "D4", "G3");
        
        const midi_letters = flatten(list(nine,ten,eleven,twelve,thirteen,fourteen,fifteen,sixteen,seventeen,eighteen,nineteen,twenty,
                                          twentyone,twentytwo,twentythree,twentyfour,twentyfive,twentysix,twentyseven,twentyeight,
                                          twentynine,thirty,thirtyone,thirtytwo,thirtythree,thirtyfour,thirtyfive,thirtysix,thirtyseven,
                                          thirtyeight,thirtynine,forty));
        const midi_notes = map(letter_name_to_midi_note, midi_letters);
        const chord = x => lead_piano(x, 0.125);
        const chords = map(chord, midi_notes);
        
        const to_play = consecutively(pair(all, chords));
        
        return make_sound(t => get_wave(to_play)(t) * 0.8, get_duration(to_play));
    }
    
    return simultaneously(list(chords(), bass(), lead()));
}

// Keep this play function call in your submission
play(later_that_night());

/*
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⡤⠖⠒⠚⠓⢦⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣴⠟⠀⠀⠀⠀⠀⠈⠱⡈⢷⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⠇⠀⠀⣈⠠⣀⠀⠀⠀⠘⣄⠝⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣾⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⢠⠐⣆⠳⣤⢋⠄⠀⠀⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠁⠀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⡀⠰⢫⣴⣫⠖⣍⠆⠀⢨⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠇⢺⠟⢀⡀⠀⠀⣀⠀⠄⠀⠀⠀⠀⠀⠀⠑⠀⠀⠀⠉⠉⠈⠀⠀⠚⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠊⠀⠀⠀⠀⠀⠀⠀⠄⠰⠶⠿⠏⣠⣾⠟⠀⣠⣴⣾⣿⣿⣦⣈⠀⠀⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠻⣀⢖⡠⠀⠀⠀⠀⠀⠀⠀⠀⠁⠀⠉⢁⣴⣾⣿⣿⣿⣣⡙⢿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠠⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠀⠈⠚⢷⣦⣴⠀⠀⠀⠀⠀⠀⠀⢀⣴⣿⣿⣿⣿⣿⣿⣿⣿⠄⠻⣿⣿⣿⣦⣄⠀⠀⠀⠀⠈⠀⠀⣤⣤⣤⣄⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣿⡟⠀⠀⠀⠀⠀⣠⣿⡟⣹⣿⣿⣶⣿⢈⠟⠁⠀⠀⠈⠛⠿⠛⠛⠿⢿⣶⡄⢀⣴⣿⣿⣿⣿⣶⣭⠙⣦⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠐⠀⠀⢀⣴⣿⣿⣿⣿⣿⣿⣿⠃⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⢰⣿⣿⣿⣿⣿⠛⢿⣿⣷⠘⢿⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠾⠃⠀⣴⣿⣿⣿⡟⢿⣿⣯⣀⣸⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠛⠙⠿⠿⠟⠷⣬⡻⣿⠄⠀⠙⢧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⣿⣿⣏⣿⣿⣿⣿⣿⣿⣿⣅⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣄⡠⠾⣿⣿⣿⣶⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⡿⣿⣿⣿⣿⣿⡿⠿⣿⣿⣟⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⣿⣿⠿⢿⡦⠹⣿⣿⣿⣿⣦⠀⠀⢴⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⣿⠿⠉⠀⠀⠀⠀⠉⣏⣯⣦⠀⠀⠀⠀⠀⣸⣿⣿⣿⣶⣿⡇⠀⠈⢿⣿⡿⣿⠀⠀⠀⠉⢿⣆⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣿⣿⣿⣿⡿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠿⣗⡄⠀⢀⣾⣿⣿⠿⠁⠈⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠻⣦⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⡀⠀⠀⠀⢿⣿⣿⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⣷⣾⣿⠟⢁⣄⠠⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣿⣷⣤⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣤⡾⠛⠇⠐⠢⠀⠀⠘⣿⣿⣷⣤⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⣿⣿⡽⣎⡵⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡟⠁⠀⠀⠠⡄⡄⠀⠢⠀⠘⢿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣴⣾⠗⢀⠈⠻⣿⣟⢦⢣⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⣄⠀⠀⠈⢻⣿⣿⡷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠁⠀⠀⡌⣱⠚⣴⣂⠀⠁⠀⠈⢻⣿⣿⡄⠀⠀⠀⠀⠀⢀⣴⣿⣿⣿⣿⡖⣯⣖⡀⠈⠙⠯⡖⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠳⣄⠀⠈⠻⣿⣷⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠰⡇⠀⠀⠀⠰⢡⠛⡴⡩⠆⠀⡥⠀⠀⠙⢿⣿⣦⡀⠀⠀⢀⣾⣿⣿⣿⣿⠋⡼⡱⢎⡕⠣⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⠀⠐⠛⠿⠿⠆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢧⠀⠀⠀⠀⠁⠊⠐⠁⢀⣠⠀⠀⠀⠀⠀⠙⠿⣿⣴⣿⣿⣿⣭⣿⣿⢣⢞⣡⠓⠬⠌⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠛⠂⢠⣶⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⠦⣤⣀⣄⣠⡔⠶⠎⠀⠀⠀⠀⠀⠀⠀⡀⢹⣿⣿⣧⣤⡉⢛⣿⣰⣋⠶⠉⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⠀⠀⣠⣾⣯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠉⠉⠈⠀⠀⠀⠀⠀⠀⣠⣶⣿⣧⠈⢿⣿⣿⣿⣿⣼⣿⡷⣝⡂⠈⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⡿⠿⠃⠀⠀⣰⣿⣶⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⣿⣿⣿⣿⠧⠘⠻⣿⣿⡟⠛⠿⠛⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⢀⣶⣽⢢⠀⠀⠀⣰⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣴⣆⡀⠀⢸⣿⣿⣯⣤⠀⠀⠀⠀⠈⠀⠀⠀⠀⠀⠸⢦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡘⠉⠻⠏⠃⠀⠀⠴⢿⣿⣿⣿⠟⣃⣠⣤⣶⣶⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣴⣿⣿⣿⣿⣦⡀⠻⣿⣿⣯⣦⠁⠀⠀⠀⠀⢀⡀⠀⠀⠀⠀⠑⢦⣀⡀⠀⠀⠄⡁⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⢓⠄⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠀⣿⣿⣿⣿⣿⣿⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⣿⣿⣿⣿⡟⠀⠀⠈⠻⣿⣿⣂⠀⠀⠀⣰⣦⠓⠀⠀⠀⠀⠀⠀⠙⠻⣷⣦⣤⣑⠀⠀⠀⠀⠀⠀⠀⣶⡜⡡⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⠘⠻⣿⢿⣿⣿⣿⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⣿⣿⡇⢧⡀⠀⠀⠀⠈⠛⠏⠀⠀⣴⣿⡧⠀⣰⡀⠀⠀⠀⠀⠀⠀⠀⠹⣿⣿⣷⣦⣄⢀⣄⡆⠸⠵⠈⠀⠀⣠⣶⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠸⢿⣿⣿⣿⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣿⣿⡟⢇⣼⠁⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⡳⠄⠘⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠛⠛⠿⠿⠛⠀⠀⠁⠀⠀⢾⡿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⠀⠀⠙⠿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⢿⣧⠈⢯⡰⢊⠀⠀⠀⠀⠀⠀⢸⡿⣿⣷⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠚⠿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⡇⣧⡀⠙⡧⠀⠀⠀⠀⠀⠀⡾⣷⣼⣿⠎⢀⡞⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠛⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣶⣿⣿⣷⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⣿⡟⣿⣿⠀⠘⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⣿⣿⣿⣿⣿⣿⡿⠫⠄⠀⠀⠀⠀⠀⢈⡷⣿⣽⡿⢀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⢿⣿⣿⣿⢿⣷⣏⡖⡀⠀⠀⠀⠀⢸⣽⣻⠟⢀⣾⣿⡶⠤⣤⣴⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣤⣾⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⣯⣿⣿⡿⣾⣟⠋⠘⡕⠀⠀⠀⠀⣻⠾⠉⠀⠋⣁⣀⠠⡀⠀⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠙⢡⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⣿⡏⢰⢂⡐⠀⠀⠀⢠⣿⡷⠟⠉⠡⠰⠌⠃⠑⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠿⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠛⠻⠿⠿⠣⠏⠰⠀⠀⠀⠀⢸⡏⠀⡄⠘⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠑⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⣤⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣾⣿⣷⣦⣄⠀⠀⠀⠀⢠⠀⠀⢠⣿⣇⣼⣿⣿⣿⡓⠆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣠⣤⣤⣆⠖⠂⠀⠀⠐⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⠀⢰⣿⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣼⣿⣿⣿⣿⣿⠏⠀⠀⠀⠀⠸⠄⢠⣿⣭⣿⣿⣿⣿⣟⠩⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣾⣿⣿⣿⣿⣿⠄⠀⠀⠀⠀⢸⣿⡆⠀⠀⠀⠀⠀⢀⡴⠀⠀⠀⠀⠀⠀⣾⣿⣿⣿⣿⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣴⣿⣿⣿⣿⡿⠏⠀⠀⠀⠀⠀⠀⠀⠀⣾⣿⣿⣿⣿⣿⣿⣿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠾⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⣼⣿⣿⡄⠀⠀⠠⠚⠁⠀⠀⠀⠀⠀⠀⠐⣿⣛⣿⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣿⣿⣿⠓⠂⢀⠀⠀⠀⠀⠀⠀⠐⣿⣿⣿⣿⣿⣿⣿⡿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⢿⣿⣿⣿⣷⠀⠀⠀⠀⢠⣿⣿⣿⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢻⡿⠿⢻⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⣿⣿⢛⡅⠀⣜⠌⠂⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⣿⣿⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠙⠿⣿⠇⠀⠀⠀⠀⣼⣿⣿⣿⣿⡆⠀⠀⠀⠀⠀⠀⠀⢀⣤⡚⡤⠁⠀⠀⠀⠀⢾⣿⣿⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣿⣿⣿⣿⢿⡿⠀⡾⢁⠾⠀⠀⠀⠀⠀⠀⢀⣿⣿⣿⣿⣿⣿⣿⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡸⠱⠰⠀⣸⡆⠀⠀⠀⢰⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⣰⣿⣾⣹⡀⠀⠀⠀⠀⠀⠀⢿⣿⣿⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⣿⣿⣿⣿⡼⠁⣸⡓⠣⡀⠉⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⠿⣿⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢼⣷⠀⠀⠀⣿⡇⠀⠀⠀⣾⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⣰⣿⣿⣷⣯⣿⡍⠂⠀⠀⠀⠀⠀⠈⣽⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣿⣿⣿⣇⣿⠃⣼⡻⡅⢂⠑⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⡇⡀⠉⠆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⣶⠀⠀⠀⠀⠈⠁⠀⠘⠻⠇⠀⠀⠘⠛⠻⢿⣿⣿⣿⣿⠀⠀⠀⠀⠐⢿⣿⣿⣿⣿⣿⡝⢦⡑⢂⠀⠀⠀⠀⠀⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠛⠛⠿⠿⢷⣾⡿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⢺⣿⣿⣿⣿⣿⣿⣿⣡⢌⠌⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠻⠇⠀⠀⠀⠀⠻⣿⣿⣿⣿⣿⣭⠳⣝⠢⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠰⠆⠘⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⣾⣿⣽⣿⢪⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⢿⡻⣽⢳⡾⠁⢀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣾⡏⠻⣿⣶⣶⣾⣶⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⠿⠛⠉⠉⠉⠈⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⣿⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠃⠳⠌⠃⠁⠀⡈⠠⠀⠀⠐⣿⣶⣶⣤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⢀⣤⣤⣄⠀⠀⠀⠀⠀⣤⣶⣿⣿⡟⠐⣦⣤⠴⣻⣿⣿⣿⡆⣼⣿⡍⠙⠏⠀⠀⠈⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⡟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⡿⡄⠀⠀⠀⠀⠀⢠⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠐⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀
⢀⣾⡏⠀⣾⣿⣿⣿⠇⠀⠀⣀⠈⠍⠛⠋⣉⣠⡴⢿⣁⣼⡿⢿⣿⣿⡄⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢉⣤⣴⣶⠶⡶⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠛⠙⠋⠙⡑⠀⠀⠀⠀⠀⠀⠀⣀⣀⣤⣴⣶⣶⣶⣶⣦⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⣿⣿⣿⣿⣿⡝⣧⡀⠀⠀⠀⠀⠀⠀⠀
⣾⣿⠃⠀⠉⠉⠉⠁⠀⠀⠀⠁⠐⠂⢠⣿⠿⠿⠃⠘⣿⡟⠀⠀⠈⠻⣷⡻⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⣤⣶⣿⠟⠿⢿⣿⠋⠘⠑⣶⣶⡀⠀⠀⠀⠀⠀⠐⢍⢆⠣⠌⠡⢍⠣⠀⣀⣴⣾⣿⣿⣿⣛⣿⣿⣿⣿⣿⣿⣿⣿⠛⣿⣶⣤⣤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⣿⣿⡍⠛⠿⢿⣿⣿⢿⣷⣿⣿⣿⠰⣶⣶⣤⡀⠀
⠈⢿⣆⠀⠠⠀⠀⠀⠾⠶⠷⠶⠶⠄⢸⣿⡇⠀⠈⣸⣿⠏⠀⠀⠀⣾⣿⡀⠀⠀⠀⠀⠀⣀⣀⣀⣠⣤⣶⣿⣿⡄⠁⢀⣠⣶⣶⣤⣄⡀⠀⠘⢿⣿⣿⣷⣦⣤⣄⠀⢀⣾⡌⡳⡉⢖⡁⢠⣾⣿⡿⢋⣴⠾⠿⠿⢿⣄⠉⢻⠿⣿⣿⣿⣿⣦⣙⠻⢿⣿⣿⣶⣤⣄⣀⣀⣀⠀⠀⢸⣟⡀⠀⠀⢰⡤⣼⡿⠿⠎⠙⢿⣿⣿⣄⠹⣿⣿⣿⠦
⠀⠘⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣿⣿⠄⠀⠈⣿⣯⠄⠀⠀⣿⣿⡆⠀⠀⣠⣶⣿⣿⣿⣿⣿⣿⠟⢋⣭⣴⣾⣿⣿⣿⣿⣿⣿⣿⠀⣠⣾⣿⣿⣿⣿⣿⣿⣄⣈⣿⣿⠖⡹⠀⠀⠹⣿⣏⣴⣿⣿⣿⣿⣿⣶⣦⡀⠀⢷⣿⣿⣿⣿⣿⣿⣿⣦⣈⠻⣿⣿⣿⡿⣿⣿⣿⣦⣄⣿⣄⠀⠀⠙⢀⡀⠀⠀⢠⣿⣿⡿⠿⠿⠇⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢍⣒⠀⠀⠹⣟⠦⠀⠀⢹⣿⡗⠀⣾⣿⣿⣿⣿⣿⣿⣿⡵⠀⣼⣿⣿⣿⣿⣿⣿⣿⣿⡄⠁⢰⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⠛⠀⠀⠀⠀⠀⢨⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⠀⠙⢿⣿⣿⣿⣿⣿⣿⣿⣦⡈⠙⡙⣿⣿⣻⣿⣿⣿⣿⡙⠆⠀⢠⣾⣇⠀⠀⠸⢿⣿⠄⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠁⠀⠀⠀⠉⠀⣸⣿⣿⣅⠉⠘⠻⠻⠿⠀⢸⣿⣿⣿⣿⡶⠿⠿⠿⢿⣿⡀⢸⣿⣶⡿⠿⠿⣿⠿⣿⣿⣿⡇⣠⣄⠀⠀⠀⠀⠹⣿⣿⣿⣿⠿⠿⢿⣿⣿⣿⣷⠀⠀⠈⠛⠿⠿⣿⠿⣿⣿⣿⡇⠀⠉⠛⠻⠿⠿⠿⠿⣿⡇⠀⠀⠿⢿⢫⠂⢀⣠⣿⡿⠇⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣴⣤⣌⣉⣁⣄⣀⣀⠤⠤⢰⣦⣍⣉⣉⣉⣀⣀⣀⣀⣠⣴⠖⢀⣛⠛⠁⠂⠀⠀⠀⣈⣉⣡⣴⡏⠁⠀⠀⣰⣿⣦⣄⣉⠛⢋⣀⠀⠀⠀⠈⠉⣁⡤⠄⢀⣀⣀⣀⣀⣀⣀⣀⣀⣤⡄⠀⠤⢤⣤⣤⣤⣤⣤⣴⣦⠀⠀⠀⠀⠀⠘⠛⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠛⠛⠛⠛⠳⠄⠀⠀⠀⠀⠘⠻⠿⠛⠿⣿⣍⡭⠉⠉⠈⠁⠀⠻⠿⢿⠟⡉⢉⡉⠙⠋⠉⠛⠉⠀⠀⠀⠀⠀⠀⠙⠿⢿⣿⠛⠛⢋⠉⠉⡉⠀⠁⠀⠤⣾⡿⢯⣭⢍⠈⠉⠉⠉⠉⠀⠶⠶⠾⠷⠶⠤⠈⠉⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
*/
